#!/bin/bash

# Files to symlink
Brewfile=~/Brewfile
zsh=~/.zshrc

kitty=~/.config/kitty/kitty.conf

fish=~/.config/fish/config.fish
fish_variables=~/.config/fish/fish_variables
omf=~/.config/fish/conf.d/omf.fish
omf_bundle=~/.config/omf/bundle
omf_channel=~/.config/omf/channel
omf_theme=~/.config/omf/theme

nvim_init=~/.config/nvim/init.lua
nvim_lsp=~/.config/nvim/lua/lsp.lua
nvim_plugins=~/.config/nvim/lua/plugins.lua
nvim_utils=~/.config/nvim/lua/utils.lua

bat=~/.config/bat/config
hammerspoon=~/.hammerspoon/init.lua
ranger=~/.config/ranger/rc.conf
ripgrep=~/.ignore

# Install Homebrew
if ! command -v brew &> /dev/null
then
	echo "Installing Homebrew..."
	curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh
fi

# Install asdf-vm
if ! command -v asdf &> /dev/null
then
	echo "Installing asdf-vm..."
	git clone https://github.com/asdf-vm/asdf.git ~/.asdf --branch v0.8.0
fi

# Homebrew
if [ ! -L $Brewfile ] ; then
	echo "Creating symbolic link for Brewfile..."
	ln -s $PWD/homebrew/Brewfile $Brewfile
fi

echo "Installing Brewfile packages..."
brew bundle --file=$Brewfile

# Kitty
if [ ! -L $kitty ] ; then
	echo "Creating symbolic link for Kitty config..."
	mkdir -p ~/.config/kitty
	ln -s $PWD/kitty/kitty.conf $kitty
fi

# Fish
if [ ! -L $fish ] ; then
	echo "Creating symbolic link for config.fish..."
	mkdir -p ~/.config/fish
	ln -s $PWD/fish/config.fish $fish
fi

if [ ! -L $fish_variables ] ; then
	echo "Creating symbolic link for fish variables..."
	mkdir -p ~/.config/fish
	ln -s $PWD/fish/fish_variables $fish_variables
fi

if [ ! -L $omf ] ; then
	echo "Creating symbolic link for omf.fish..."
	mkdir -p ~/.config/fish/conf.d
	ln -s $PWD/fish/omf.fish $omf
fi

if [ ! -L $omf_bundle ] ; then
	echo "Creating symbolic link for omf bundle..."
	mkdir -p ~/.config/omf
	ln -s $PWD/fish/omf/bundle $omf_bundle
fi

if [ ! -L $omf_channel ] ; then
	echo "Creating symbolic link for omf channel..."
	mkdir -p ~/.config/omf
	ln -s $PWD/fish/omf/channel $omf_channel
fi

if [ ! -L $omf_theme ] ; then
	echo "Creating symbolic link for omf theme..."
	mkdir -p ~/.config/omf
	ln -s $PWD/fish/omf/theme $omf_theme
fi

# Install oh-my-fish
if ! command -v omf &> /dev/null
then
	echo "Installing OMF..."
	curl -L https://get.oh-my.fish > install
	fish install --noninteractive --path=~/.local/share/omf --config=~/.config/omf
	rm $PWD/install
fi

# ZSH
if [ ! -L $zsh ] ; then
	echo "Creating symbolic link for .zshrc..."
	ln -s $PWD/zsh/zshrc $zsh
fi

# Vim
if [ ! -L $vim ] ; then
	echo "Creating symbolic link for .vimrc..."
	ln -s $PWD/vim/vimrc $vim
fi

# Neovim
if [ ! -L $nvim_init ] ; then
	echo "Creating symbolic link for nvim/init.lua..."
	mkdir -p ~/.config/nvim
	ln -s $PWD/neovim/init.lua $nvim_init
fi

if [ ! -L $nvim_lsp ] ; then
	echo "Copying lsp.lua to config location..."
	mkdir -p ~/.config/nvim/lua
	cp $PWD/neovim/lsp.lua $nvim_lsp
fi

if [ ! -L $nvim_plugins ] ; then
	echo "Creating symbolic link for nvim/lua/plugins.lua..."
	mkdir -p ~/.config/nvim/lua
	ln -s $PWD/neovim/plugins.lua $nvim_plugins
fi

if [ ! -L $nvim_utils ] ; then
	echo "Creating symbolic link for nvim/lua/utils.lua..."
	mkdir -p ~/.config/nvim/lua
	ln -s $PWD/neovim/utils.lua $nvim_utils
fi

# Ranger
if [ ! -L $ranger ] ; then
	echo "Creating symbolic link for Ranger config..."
	ln -s $PWD/ranger/rc.conf $ranger
fi

# Ripgrep
if [ ! -L $ripgrep ] ; then
	echo "Adding .ignore for ripgrep..."
	ln -s $PWD/ripgrep/ignore $ripgrep
fi

# BAT
if [ ! -L $bat ] ; then
	echo "Creating symbolic link for BAT config..."
	ln -s $PWD/bat/config $bat
fi

# Hammerspoon
if [ ! -L $hammerspoon ] ; then
	echo "Creating symbolic link for Hammerspoon config..."
	ln -s $PWD/hammerspoon/init.lua $hammerspoon
fi
